<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>xorpd</title><link>http://www.xorpd.net/</link><description></description><atom:link href="http://www.xorpd.net/feeds/xorpd.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 05 Sep 2014 11:46:00 +0200</lastBuildDate><item><title>Compiling vim with python3 support</title><link>http://www.xorpd.net/compiling-vim-with-python3-support.html</link><description>&lt;h1&gt;Steps for compiling vim with python3 support&lt;/h1&gt;
&lt;p&gt;First Get checkinstall. It will allow us to install vim in an ordered fashion.
If we ever want to remove this vim version, we could do it easily. (As opposed
to just doing "make install", and then you are on your own if you want to
remove this program in the future).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install checkinstall
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also need mercurial, to be able to download vim's source:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install mercurial
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next we get some packages that might be needed for the compilation process:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-dev python3-dev ruby ruby-dev
libx11-dev libxt-dev libgtk2.0-dev libncurses5 ncurses-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now get the lateset version of vim:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;hg clone https://vim.googlecode.com/hg/ vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next we configure:
(Note that here one should choose if he wants to have python3 support or
python 2 support. Because of some limitations it is not possible to have
both of them.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./configure &lt;span class="se"&gt;\&lt;/span&gt;
--enable-perlinterp &lt;span class="se"&gt;\&lt;/span&gt;
--enable-python3interp &lt;span class="se"&gt;\&lt;/span&gt;
--enable-rubyinterp &lt;span class="se"&gt;\&lt;/span&gt;
--enable-cscope &lt;span class="se"&gt;\&lt;/span&gt;
--enable-gui&lt;span class="o"&gt;=&lt;/span&gt;auto &lt;span class="se"&gt;\&lt;/span&gt;
--enable-gtk2-check &lt;span class="se"&gt;\&lt;/span&gt;
--enable-gnome-check &lt;span class="se"&gt;\&lt;/span&gt;
--with-features&lt;span class="o"&gt;=&lt;/span&gt;huge &lt;span class="se"&gt;\&lt;/span&gt;
--enable-multibyte &lt;span class="se"&gt;\&lt;/span&gt;
--with-x &lt;span class="se"&gt;\&lt;/span&gt;
--with-compiledby&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xorpd&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--with-python3-config-dir&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu &lt;span class="se"&gt;\&lt;/span&gt;
--prefix&lt;span class="o"&gt;=&lt;/span&gt;/opt/vim74
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next we compile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now it is a good time to test the result. Don't install it yet, because you
might still want to fix some things.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Even if all the tests passed, make sure that you do have python3 support.
Go to the src folder (./vim/src), and invoke the new vim binary from there.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then invoke inside vim:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;:&lt;/span&gt;echo has&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;python3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you get 1, it's all good.&lt;/p&gt;
&lt;p&gt;We install the package using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo checkinstall
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of some strange reason, I have to change the name of the package to 
something which is not "vim". "vim74_compiled" will do, for example. (If I
don't change it, I get an error message from checkinstall).&lt;/p&gt;
&lt;p&gt;Finally, we create a shortcut:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo ln -s /opt/vim74/bin/vim /usr/bin/vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Happy vimming!&lt;/p&gt;
&lt;p&gt;More tips regarding this subject could be found here on the following links:
(Much of the information that could be found in this article relies on the
information from those links)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://vimdoc.sourceforge.net/htmldoc/usr_90.html"&gt;vim's documentation&lt;/a&gt;
&lt;a href="http://kowalcj0.wordpress.com/2013/11/19/how-to-compile-and-install-latest-version-of-vim-with-support-for-x11-clipboard-ruby-python-2-3/"&gt;Hulk Angry Hulk Smash's blog&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xorpd</dc:creator><pubDate>Fri, 05 Sep 2014 11:46:00 +0200</pubDate><guid>tag:www.xorpd.net,2014-09-05:compiling-vim-with-python3-support.html</guid><category>meta</category><category>vim</category><category>tech-struggle</category></item><item><title>Very basic GDB commands</title><link>http://www.xorpd.net/very-basic-gdb-commands.html</link><description>&lt;p&gt;GDB is a very powerful debugger that comes with most linux distrubutions. You
will want to study it for a while if you are going to write assembly code on
the linux platform.&lt;/p&gt;
&lt;p&gt;It takes some time to study the first GDB commands, however don't be
intimidated by the black console. Invest the time to study the basic commands.
It really worth it.&lt;/p&gt;
&lt;p&gt;If you are just starting out with gdb, the following basic commands might be
useful for you.&lt;/p&gt;
&lt;h2&gt;Getting some information:&lt;/h2&gt;
&lt;p&gt;Getting information about the entry point (And some more): 
This is very useful if you want to put a breakpoint in the beginning of the
program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;info files
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Viewing the registers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;info registers
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or for specific register:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;info registers regname
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to view the disassembly of the current location, you may use the
following command to get a cool assembly window:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;layout asm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It happens to me sometimes that the view is messed up after some stepping
around the code. If that happens to you, you could use the &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;refresh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;command to refresh the view.&lt;/p&gt;
&lt;h2&gt;Breakpoints:&lt;/h2&gt;
&lt;p&gt;Setting a breakpoint:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;break&lt;/span&gt; *0x800000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;View list of breakpoints:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;info breakpoints
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Deleting a breakpoint:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;delete &lt;span class="o"&gt;(&lt;/span&gt;breakpoint_number&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or the shortcut:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;d &lt;span class="o"&gt;(&lt;/span&gt;breakpoint number&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Controlling debugee:&lt;/h2&gt;
&lt;p&gt;Running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;run
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Continuing the program:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Stepping into: (This one will get into functions)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;stepi
si
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Stepping over: (This one will skip functions)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nexti
ni
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xorpd</dc:creator><pubDate>Fri, 05 Sep 2014 11:20:00 +0200</pubDate><guid>tag:www.xorpd.net,2014-09-05:very-basic-gdb-commands.html</guid><category>meta</category><category>tech-struggle</category><category>gdb</category></item><item><title>Update for x86 foundations course</title><link>http://www.xorpd.net/update-for-x86-foundations-course.html</link><description>&lt;p&gt;The x86 foundations can now be purchased at 50% discount through this website.
All the links on this website were updated accordingly.
&lt;a href="https://www.udemy.com/x86-asm-foundations/?couponCode=xorpd_website"&gt;Get the course (Udemy)&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xorpd</dc:creator><pubDate>Sun, 27 Jul 2014 14:25:00 +0200</pubDate><guid>tag:www.xorpd.net,2014-07-27:update-for-x86-foundations-course.html</guid><category>assembly</category><category>course</category></item><item><title>x86 Foundations Course Launch</title><link>http://www.xorpd.net/x86-foundations-course-launch.html</link><description>&lt;h2&gt;30 free course coupons&lt;/h2&gt;
&lt;p&gt;The x86 Foundations Course is ready! You can study x86 Assembly from scratch
today. I release &lt;a href="https://www.udemy.com/x86-asm-foundations/?couponCode=x86_foundations_launch"&gt;30 free coupons for the course&lt;/a&gt;
Please take a coupon only if you really plan on studying this. I'm looking for
people who could give me some real feedback about the learning experience.&lt;/p&gt;
&lt;p&gt;If there are no more free coupons, &lt;a href="https://www.udemy.com/x86-asm-foundations/?couponCode=xorpd_website"&gt;you can buy the course at
udemy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As an alternative, if you are an experienced assembly programmer, Doing the
exercises might be enough for you. The exercises are open source, 
&lt;a href="https://github.com/xorpd/asm_prog_ex"&gt;and you can get them on github&lt;/a&gt;.
In that case, don't be afraid to send me some feedback or questions about the
exercises.&lt;/p&gt;
&lt;h2&gt;About the course&lt;/h2&gt;
&lt;h3&gt;What is assembly language&lt;/h3&gt;
&lt;p&gt;Assembly language is the language your processor talks. Knowing it should give
you better understanding of how your computer works, and if you are a
programmer: how your programs work. It doesn't matter what kind of programming
you do, It will make you a much better programmer.&lt;/p&gt;
&lt;h3&gt;Previous knowledge assumed&lt;/h3&gt;
&lt;p&gt;The course assumes that you know nothing. Maybe just a bit of how to add and
subtract numbers, but come on, if you survived so far in our civilization you
must know how to add and subtract numbers :)&lt;/p&gt;
&lt;p&gt;That said, even if you are a skilled programmer in some higher level programming
language, you are going to earn much from doing this course.&lt;/p&gt;
&lt;h3&gt;The course Structure&lt;/h3&gt;
&lt;p&gt;The course is made of Video Lectures, and Exercises. For almost every video
lecture you will find corresponding exercises. The exercises make sure that you
understood the lecture, and also that you will remember what you have learned
there. Some of the exercises will teach you something that was not explained in
the lectures. Every lecture depends on the knowledge acquired from the previous
lectures.&lt;/p&gt;
&lt;p&gt;I am really proud of the
video lectures. They were hard for me to do, as I am not a native English
speaker. However I think that the really important part of the course are the
exercises. I should tell you this up front- If you want to become a real
assembly programmer, much work is to be done. I wrote all the exercises for you,
lined up gradually, but it is really up to you to do those exercises.&lt;/p&gt;
&lt;p&gt;If you watch all the video lectures you will probably learn something, however
if you complete all the exercises, I guarantee that you will never be the same.&lt;/p&gt;
&lt;h3&gt;Technical details&lt;/h3&gt;
&lt;p&gt;For the tech Savvy, some technical summary of the course:
The course will teach you how to write assembly programs on the Windows
operations system, using &lt;a href="http://www.flatassembler.net"&gt;FASM&lt;/a&gt; - The Flat
Assembler. The programming in this course is done in 32 bits protected mode.
That means - No interrupts and no memory segments. Every assembly programmer
will tell you that this is the good life :)&lt;/p&gt;
&lt;p&gt;As this is a basic course, we don't get to the part of writing real Windows GUI
(Graphical User Interface) programs, but we almost touch it. The last
program in the course is about really simple GUI. When you finish the course you
will have the skills and the knowledge to learn it by yourself. Maybe if I have
the time at some point, I will write a course about that.&lt;/p&gt;
&lt;h3&gt;The course contents&lt;/h3&gt;
&lt;p&gt;Some subjects that are covered in this course:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Numeric systems and the Binary system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introduction to FASM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Branching&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Signed Operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bitwise Operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Strings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subroutines and the stack&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the Manuals&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Imports and a bit of Windows API&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Meta&lt;/h2&gt;
&lt;p&gt;I dealt with Assembly and the low level for a really long part of my life. I
spent many years trying to understand why some small thing doesn't work, and how
to fix it, Or what some strange combination of three assembly instructions do.&lt;/p&gt;
&lt;p&gt;During that time many friends and coworkers asked me if I could explain them how
to learn those subjects. It took a few years until I felt that I became the
right person to teach this kind of material. Even just for the few who asked me,
I am happy to present this course.&lt;/p&gt;
&lt;p&gt;It took a really long time to make this. Much more than I expected. The lectures
were recorded back in my home country, and I never realized how hard it could be
to talk every day for hours. I did it for months, and I was so happy when I
finished. &lt;/p&gt;
&lt;p&gt;Then came the editing. Most of them were done at Tokyo, about 3-4 hours a day. I
felt that I had to do it at least once, to know what it is like. As I am not a
native English speaker, I really had to edit a lot. There were some days that I
thought I am going to give up, sitting in a Cafe in Tokyo editing those videos.
But eventually I finished.&lt;/p&gt;
&lt;p&gt;Finally I had to deal with some smaller technical details. They were pretty
small technically speaking, however they had some really big impact. The Udemy
team helped me with choosing the correct length for the lectures (In the
beginning some of them were one hour long!), the price for the course and much
more. The final launch of the course at Udemy happened yesterday. I got it on my
laptop, here in Peru.&lt;/p&gt;
&lt;p&gt;I also put on this web page. This was done using Pelican with github pages. I
didn't deal with websites for years, and I have to admit I enjoyed it. There is
still much to be done about the design of this web page, but I think it's a
start. After dealing so much with the low level, doing something so high level
always impresses me.&lt;/p&gt;
&lt;p&gt;It's your turn now. I really hope this course will be of use to you. &lt;/p&gt;
&lt;p&gt;And Finally - If you are that kid sitting in the basement with your computer,
willing and ready to learn but you can't afford it, don't be shy - send me a
message at xorpd at xorpd dot net. I'm sure we can have a solution for that.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xorpd</dc:creator><pubDate>Tue, 15 Jul 2014 07:19:00 +0200</pubDate><guid>tag:www.xorpd.net,2014-07-15:x86-foundations-course-launch.html</guid><category>course</category><category>assembly</category></item><item><title>First post in the xorpd blog</title><link>http://www.xorpd.net/first-post-in-the-xorpd-blog.html</link><description>&lt;p&gt;Hey, it's my first post here. Exciting. This website is going to be about low level programming, and other related subjects.&lt;/p&gt;
&lt;p&gt;I am planning to begin with a basic course about x86 assembly language programming, and move on with more subjects.&lt;/p&gt;
&lt;p&gt;I do hope that it helps some of you out there, who want to learn this subject.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xorpd</dc:creator><pubDate>Sun, 22 Jun 2014 10:20:00 +0200</pubDate><guid>tag:www.xorpd.net,2014-06-22:first-post-in-the-xorpd-blog.html</guid><category>meta</category></item></channel></rss>